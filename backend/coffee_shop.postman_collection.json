{
	"info": {
		"_postman_id": "3451925c-08bd-41f3-aa65-af0d772506a9",
		"name": "coffee shop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"black coffee\",\n\"recipe\": \"[{\\\"name\\\": \\\"black coffee\\\", \\\"color\\\": \\\"black\\\", \\\"parts\\\": 1}]\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"recipe\": \"[{\\\"name\\\": \\\"black coffee\\\", \\\"color\\\": \\\"brown\\\", \\\"parts\\\": 1}]\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/drinks/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "barista",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"black coffee\",\n\"recipe\": \"[{\\\"name\\\": \\\"black coffee\\\", \\\"color\\\": \\\"black\\\", \\\"parts\\\": 1}]\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"recipe\": \"[{\\\"name\\\": \\\"black coffee\\\", \\\"color\\\": \\\"brown\\\", \\\"parts\\\": 1}]\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/drinks/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjZHUG9DNjJwNEcxbi10VlkxUWRXRyJ9.eyJpc3MiOiJodHRwczovL2lkYXRhaXN0LnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJMRXdQeExNRkhISW5XbEh0TmNFWE52dlJQSTZFUGlVaEBjbGllbnRzIiwiYXVkIjoiZGV2IiwiaWF0IjoxNjI1Njk2ODYyLCJleHAiOjE2MjU3ODMyNjIsImF6cCI6IkxFd1B4TE1GSEhJbldsSHROY0VYTnZ2UlBJNkVQaVVoIiwic2NvcGUiOiJnZXQ6ZHJpbmtzLWRldGFpbCIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyJ9.M7_01LnOUagIEVJImPplllk3OZr5B2JXlYMZMG0Y7DgDfa_4TtraHhmoFNQHE6gi__sZjR7Q8w-xk_VTmqHxq80FoIoX8BCc3r9mv4EFDGoZdxjZTPrs08KQfhq_Fq9slNHmBS34rKejI57MOWXk6m-zNjtHloYCbnC_c46qy8AU2zlziHHPyiMG_EVctHYuTud_ayP1KwBCixMxyqcwttSbSDVLrWjF28q54ieN8OXMmuXeibbJZwxzm0DayUEi7xsT1BvpOKVhD9eYLACOvKY6Pp49Sbu25lvOjPy2MjWlGUQ3jODRMR7XTxKiT3Xk0UDonSb-B9OBVAeWeSnaKw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "manager",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"black coffee\",\n\"recipe\": \"[{\\\"name\\\": \\\"black coffee\\\", \\\"color\\\": \\\"black\\\", \\\"parts\\\": 1}]\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"recipe\": \"[{\\\"name\\\": \\\"black coffee\\\", \\\"color\\\": \\\"brown\\\", \\\"parts\\\": 1}]\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/drinks/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjZHUG9DNjJwNEcxbi10VlkxUWRXRyJ9.eyJpc3MiOiJodHRwczovL2lkYXRhaXN0LnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJMRXdQeExNRkhISW5XbEh0TmNFWE52dlJQSTZFUGlVaEBjbGllbnRzIiwiYXVkIjoiZGV2IiwiaWF0IjoxNjI1NjkzODUzLCJleHAiOjE2MjU3ODAyNTMsImF6cCI6IkxFd1B4TE1GSEhJbldsSHROY0VYTnZ2UlBJNkVQaVVoIiwic2NvcGUiOiJnZXQ6ZHJpbmtzLWRldGFpbCBwYXRjaDpkcmlua3MgZGVsZXRlOmRyaW5rcyBwb3N0OmRyaW5rcyIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyJ9.W_utDgiXctrFW6wPNK4jJj-oN-Y0QH-JGh9DJiBYc0W0qMWlGDy-ZXMNUhXB01zUhgowE6EYL_17XinSiCiqW-vzrE4O7-IzhQHaBTUsiVjB8_YjblKKfRGtlWip5EaXeMtujCG9QMvmbHROIP0QiFmdwRqUd7Q6M2y39KFqvs6llrBR2jSWtLOJou7ELHTYQHvUgYdk8dY5h73fPIJVdaDhstZUhusZ1CCB9HtD9588easRjQWHyIF-3do91uYb8t4DLZO4E_L2jUmceoa-A1dOUwJ2mCGdwij03tc1voEx8II9YraPj1pGRfRHS_13NTPgjGho26dqMiaMKG9nmQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000",
			"type": "string"
		}
	]
}